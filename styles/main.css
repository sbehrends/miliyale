html {
  box-sizing: border-box;
}

*, *::after, *::before {
  box-sizing: inherit;
}

/*
 * Includes a webfont in eot, woff, ttf, svg.
 */
/*
 * Resets an unsorted list
 */
/* ==========================================================================
   Normalize.scss settings
   ========================================================================== */
/**
 * Includes legacy browser support IE6/7
 *
 * Set to false if you want to drop support for IE6 and IE7
 */
/* Base
   ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 * 3. Corrects text resizing oddly in IE 6/7 when body `font-size` is set using
 *  `em` units.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevents modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active, a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Addresses styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * 1. Remove border when inside `a` element in IE 8/9/10.
 * 2. Improves image quality when scaled in IE 7.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 * Correct font family set oddly in IE 6, Safari 4/5, and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *  Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 * 4. Improves appearance and consistency in all browsers.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *  and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *  `input` and others.
 * 4. Removes inner spacing in IE 7 without affecting normal text inputs.
 *  Known issue: inner spacing remains in IE 6.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 *  Known issue: excess padding remains in IE 6.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 * 3. Corrects text not wrapping in Firefox 3.
 * 4. Corrects alignment displayed oddly in IE 6/7.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

html,
body {
  height: 100%;
}

body {
  font-family: 'Brandon Groteske', sans-serif;
  font-size: 16px;
  line-height: 26px;
  -webkit-font-smoothing: antialiased;
  color: #000;
}

/* Generated by Font Squirrel (https://www.fontsquirrel.com) on July 23, 2016 */
@font-face {
  font-family: 'Brandon Groteske';
  src: url("../fonts/brandon_bld-webfont.eot");
  src: url("../fonts/brandon_bld-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/brandon_bld-webfont.woff") format("woff"), url("../fonts/brandon_bld-webfont.ttf") format("truetype"), url("../fonts/brandon_bld-webfont.svg#brandon_grotesquebold") format("svg");
  font-weight: 600;
  font-style: normal;
}

@font-face {
  font-family: 'Brandon Groteske';
  src: url("../fonts/brandon_blk-webfont.eot");
  src: url("../fonts/brandon_blk-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/brandon_blk-webfont.woff") format("woff"), url("../fonts/brandon_blk-webfont.ttf") format("truetype"), url("../fonts/brandon_blk-webfont.svg#brandon_grotesqueblack") format("svg");
  font-weight: 700;
  font-style: normal;
}

@font-face {
  font-family: 'Brandon Groteske';
  src: url("../fonts/brandon_reg-webfont.eot");
  src: url("../fonts/brandon_reg-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/brandon_reg-webfont.woff") format("woff"), url("../fonts/brandon_reg-webfont.ttf") format("truetype"), url("../fonts/brandon_reg-webfont.svg#brandon_grotesque_regularRg") format("svg");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Hurgey';
  src: url("../fonts/hurgey-webfont.eot");
  src: url("../fonts/hurgey-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/hurgey-webfont.woff") format("woff"), url("../fonts/hurgey-webfont.ttf") format("truetype"), url("../fonts/hurgey-webfont.svg#hurgeyregular") format("svg");
  font-weight: normal;
  font-style: normal;
}

.kebab {
  width: 100%;
  max-width: 960px;
  padding: 0;
  margin: 0 auto;
  box-sizing: border-box;
}

.kebab::after {
  clear: both;
  content: "";
  display: block;
}

#hero {
  min-height: 100%;
  display: -ms-flexbox;
  display: flex;
  display: -webkit-flex;
  -moz-display: flex;
  -ms-flex-flow: row wrap;
      flex-flow: row wrap;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-line-pack: center;
      align-content: center;
  -ms-flex-align: center;
      align-items: center;
  -webkit-flex-flow: row wrap;
  -webkit-justify-content: center;
  -webkit-align-content: center;
  -webkit-align-items: center;
  -moz-flex-flow: row wrap;
  -moz-justify-content: center;
  -moz-align-content: center;
  -moz-align-items: center;
  text-align: center;
  background: url(../images/bg.jpg) no-repeat center;
  background-size: cover;
  position: relative;
  overflow: hidden;
}

#hero .kebab {
  margin-bottom: 8em;
  padding-top: 2em;
}

#hero .cucos {
  width: 100%;
  height: 335px;
  pointer-events: none;
  position: absolute;
  bottom: -200px;
  left: 0;
}

#hero .cucos:before {
  content: '';
  display: block;
  width: 100%;
  height: 100%;
  background: url(../images/hills.svg) no-repeat center bottom;
  position: absolute;
  z-index: 10;
}

#hero .cucos .cuco-1 {
  width: 131px;
  height: 87px;
  position: absolute;
  top: 40px;
  left: 50%;
  margin-left: -65px;
  background: url(../images/cuco.png) no-repeat center;
  background-size: cover;
  -webkit-transform: scale(-1, 1);
  -ms-transform: scale(-1, 1);
  transform: scale(-1, 1);
  z-index: 1;
}

#hero .cucos .cuco-2 {
  width: 131px;
  height: 87px;
  position: absolute;
  top: -10px;
  left: 15%;
  margin-left: -65px;
  background: url(../images/cuco.png) no-repeat center;
  background-size: cover;
  z-index: 1;
  -webkit-transform: rotate(-25deg);
      -ms-transform: rotate(-25deg);
          transform: rotate(-25deg);
}

#hero h5 {
  font-weight: 700;
  font-size: .75em;
  text-transform: uppercase;
  letter-spacing: 15px;
  color: #000;
  margin: 0 0 2em;
}

#hero h5.apretadito {
  letter-spacing: 8px;
  margin-bottom: 7.5em;
}

#hero h2 {
  font-family: "Hurgey";
  font-size: 5em;
  color: #C09900;
  font-weight: normal;
  margin: 1.25em 0 .5em;
}

#hero h3 {
  font-size: 1.25em;
  letter-spacing: 5px;
  text-transform: uppercase;
  margin: 1em 0 1em;
}

#hero h3.color-gold {
  color: #C09900;
  letter-spacing: 10px;
}

#hero h3.color-gold i {
  display: inline-block;
  width: 25px;
  height: 25px;
  text-indent: -9999px;
  overflow: hidden;
  background: url(../images/cruz.svg) no-repeat center;
  background-size: 100%;
  position: relative;
  top: 6px;
  margin: 0 1.5em;
}

#hero h1 {
  font-size: 2.5em;
  font-weight: 700;
  text-transform: uppercase;
  margin: 1em 0 1.5em 0;
  line-height: .75em;
}

#hero h1 span {
  display: block;
  margin-right: 1.5em;
}

#hero h1 i {
  font-family: "Hurgey";
  font-style: normal;
  font-weight: normal;
  font-size: 2.5em;
  position: relative;
  top: 20px;
  color: #C09900;
}

#hero .location {
  padding: 0;
  margin: 0;
  display: -ms-flexbox;
  display: flex;
  display: -webkit-flex;
  -moz-display: flex;
  -ms-flex-flow: row wrap;
      flex-flow: row wrap;
  -ms-flex-pack: justify;
      justify-content: space-between;
  -ms-flex-line-pack: center;
      align-content: center;
  -ms-flex-align: center;
      align-items: center;
  -webkit-flex-flow: row wrap;
  -webkit-justify-content: space-between;
  -webkit-align-content: center;
  -webkit-align-items: center;
  -moz-flex-flow: row wrap;
  -moz-justify-content: space-between;
  -moz-align-content: center;
  -moz-align-items: center;
  position: relative;
}

#hero .location li {
  list-style: none;
  display: block;
  -webkit-flex: 1 1 auto;
      -ms-flex: 1 1 auto;
          flex: 1 1 auto;
  font-size: 1.56em;
  text-transform: uppercase;
  font-weight: 600;
  max-width: 50%;
}

#hero .location li span {
  font-size: 2em;
  text-transform: none;
  font-family: "Hurgey";
  font-weight: normal;
  display: block;
  margin-bottom: .75em;
}

#hero .location:before {
  content: '';
  display: block;
  position: absolute;
  top: 50%;
  left: 50%;
  width: 17px;
  height: 110px;
  margin: -65px 0 0 -8px;
  background: url(../images/arrow.svg) no-repeat;
  background-size: auto 100%;
}

@media (max-width: 768px) {
  #hero {
    background-size: auto 100%;
  }
  #hero .kebab {
    padding-top: 2em;
  }
  #hero h5 {
    font-size: .5em;
    letter-spacing: 10px;
  }
  #hero h2 {
    font-size: 3em;
    margin-top: 0;
  }
  #hero h3 {
    font-size: 1em;
  }
  #hero h3.color-gold i {
    top: 0px;
  }
  #hero h1 {
    font-size: 1.75em;
  }
  #hero h1 i {
    top: 10px;
  }
  #hero .location {
    display: block;
  }
  #hero .location:before {
    display: none;
  }
  #hero .location li {
    display: block;
    max-width: 100%;
    font-size: 1em;
    margin-bottom: 0em;
  }
  #hero .location li:first-child {
    display: none;
  }
  #hero .location li span {
    font-size: 3em;
    margin-bottom: .15em;
  }
  #hero .cucos {
    bottom: -70px;
    height: 115px;
  }
  #hero .cucos:before {
    background-size: auto 100%;
  }
  #hero .cucos .cuco-1 {
    top: -30px;
    left: 59%;
    -webkit-transform: scale(-0.5, 0.5) rotate(11deg);
        -ms-transform: scale(-0.5, 0.5) rotate(11deg);
            transform: scale(-0.5, 0.5) rotate(11deg);
  }
  #hero .cucos .cuco-2 {
    -webkit-transform: scale(0.5);
        -ms-transform: scale(0.5);
            transform: scale(0.5);
    left: 40%;
    top: -20px;
  }
}

#cucos {
  padding: 4em 0;
  margin-bottom: 4em;
  position: relative;
}

#cucos:after {
  content: "";
  display: block;
  position: absolute;
  left: 50%;
  bottom: -50px;
  width: 4px;
  height: 150px;
  z-index: 10;
  background: url(../images/line.svg) no-repeat;
  background-size: 100% auto;
}

#cucos h2 {
  font-size: 5em;
  font-family: "Hurgey";
  color: #C09900;
  font-weight: normal;
  margin-bottom: 0;
}

#cucos p {
  font-size: 1.25em;
  font-weight: 700;
  letter-spacing: 10px;
}

#cucos img {
  width: 400px;
  max-width: 85%;
  height: auto;
}

#cucos .kebab {
  position: relative;
}

#cucos .kebab:before {
  content: "&";
  font-size: 18.75em;
  font-family: "Hurgey";
  position: absolute;
  top: 50%;
  left: 50%;
  margin-left: -.25em;
  margin-top: .1em;
}

#cucos .cuquito {
  float: left;
  display: block;
  margin-right: 16.036314621%;
  width: 41.9818426895%;
  position: relative;
}

#cucos .cuquito:last-child {
  margin-right: 0;
}

#cucos .cuquito .kien {
  position: absolute;
  top: 0;
  right: 0;
}

#cucos .cuquito .imagencita {
  position: relative;
  z-index: 0;
}

#cucos .cuquito .imagencita:before {
  content: "";
  display: block;
  width: 100%;
  height: 100%;
  z-index: 10;
  position: absolute;
  background: url(../images/tree-01.png) no-repeat -120px, url(../images/tree-02.png) no-repeat 220px;
  background-size: auto 100%;
}

#cucos .cuquito .imagencita:after {
  content: "";
  display: block;
  width: 50%;
  padding-top: 50%;
  position: absolute;
  z-index: 11;
  top: 0;
  left: 0;
  background: url(../images/frame.svg) no-repeat center;
  background-size: 100%;
}

#cucos .cuquito.cuco-mili .kien {
  top: 7%;
  right: -100px;
}

#cucos .cuquito.cuco-mili .imagencita:after {
  top: -2%;
  left: 1%;
}

#cucos .cuquito.cuco-ale {
  text-align: right;
  margin-top: 70px;
}

#cucos .cuquito.cuco-ale .kien {
  top: 50%;
  right: auto;
  left: -10%;
  text-align: left;
}

#cucos .cuquito.cuco-ale .kien h2 {
  text-indent: .25em;
}

#cucos .cuquito.cuco-ale .imagencita:before {
  background: url(../images/tree-02.png) no-repeat 330px, url(../images/tree-01.png) no-repeat -50px;
  background-size: auto 100%;
}

#cucos .cuquito.cuco-ale .imagencita:after {
  left: auto;
  right: 17%;
  top: 25%;
}

@media (max-width: 768px) {
  #cucos {
    display: none;
  }
}

#laposta {
  position: relative;
  padding-bottom: 10em;
  overflow: hidden;
}

#laposta .kebab {
  max-width: 1240px;
  padding: 0 2em;
  position: relative;
  z-index: 2;
  pointer-events: none;
}

#laposta .data {
  width: 300px;
  margin-bottom: 120px;
}

#laposta .data a {
  pointer-events: all;
}

#laposta .data:nth-child(2) {
  width: 500px;
}

#laposta h4 {
  font-weight: 700;
  font-size: 1.5em;
  letter-spacing: 7px;
  position: relative;
  margin-bottom: 0;
}

#laposta h4:after {
  display: block;
  width: 50px;
  height: 3px;
  background: #000;
  content: "";
  margin-top: 1em;
}

#laposta h3 {
  font-size: 3.125em;
  font-family: "Hurgey";
  font-weight: normal;
  line-height: 1.5em;
  margin-top: .75em;
}

#laposta h3 span:not(.gold) {
  display: block;
  font-family: "Brandon Groteske";
  font-size: .4em;
  font-weight: 700;
  letter-spacing: 10px;
  margin-bottom: 1em;
}

#laposta h3 span.gold {
  color: #C09900;
  position: relative;
}

#laposta h3 span.gold:after {
  content: "";
  width: 100%;
  height: 1px;
  background: #C09900;
  position: absolute;
  left: 0;
  top: 1em;
  margin-top: 15px;
}

#laposta blockquote {
  display: block;
  padding: .5em 1em;
  font-weight: 700;
  text-align: center;
  margin: 0;
  font-size: 1.25em;
  letter-spacing: 3px;
  border: 1px solid #C09900;
  position: relative;
  margin-bottom: 1.5em;
}

#laposta blockquote:after {
  content: "";
  border: 1px solid #000;
  opacity: .5;
  display: block;
  position: absolute;
  top: -6px;
  bottom: -6px;
  left: 5px;
  right: 5px;
}

#laposta .btn {
  font-size: .75em;
  text-transform: uppercase;
  font-weight: 700;
  color: #000;
  text-decoration: none;
  letter-spacing: 8px;
  position: relative;
  padding: 10px 0 10px 52px;
}

#laposta .btn:after {
  content: "";
  right: 0;
  height: 2px;
  width: calc(100% - 57px);
  background: #000;
  position: absolute;
  left: 52px;
  top: 100%;
}

#laposta .btn:before {
  content: "";
  width: 32px;
  height: 32px;
  position: absolute;
  left: 0;
  top: 8px;
  background: url(../images/icon-cal.svg) no-repeat center;
  background-size: 100%;
}

#laposta .btn.btn-map:before {
  background: url(../images/icon-map.svg) no-repeat center;
}

#laposta .fotulis {
  position: absolute;
  left: 37%;
  top: 100px;
  z-index: 100;
  white-space: nowrap;
}

#laposta .fotulis:before {
  content: "";
  display: block;
  width: 100%;
  height: 100%;
  z-index: 10;
  position: absolute;
  background: url(../images/tree-01.png) no-repeat 50%, url(../images/tree-02.png) no-repeat -5%;
  background-size: auto 100%;
  pointer-events: none;
}

#laposta .fotulis img {
  display: inline-block;
  width: auto;
  height: 425px;
}

#map {
  width: 75%;
  height: 950px;
  position: absolute;
  bottom: 0;
  right: 0;
  z-index: 1;
}

@media (max-width: 1025px) {
  #laposta .fotulis {
    left: 45%;
  }
  #laposta .fotulis img {
    height: 250px;
  }
}

@media (max-width: 768px) {
  #laposta {
    padding-bottom: 1em;
  }
  #laposta .data:nth-child(1) {
    display: none;
  }
  #laposta .data:nth-child(2) {
    width: 100%;
    text-align: center;
  }
  #laposta .data:nth-child(2) h4 {
    display: none;
  }
  #laposta .data:nth-child(2) h3 {
    font-size: 3em;
  }
  #laposta .data:nth-child(2) h3 span {
    font-size: .333em;
    letter-spacing: 0;
    font-weight: 600;
  }
  #laposta .fotulis {
    display: none;
  }
  #laposta #map {
    display: none;
  }
}

#sobornos {
  width: 100%;
  margin: 0 auto;
  background: url(../images/tile.jpg) repeat;
  text-align: center;
  padding: 9em 0;
  position: relative;
  z-index: 3;
}

#sobornos:before {
  content: "";
  width: 14px;
  height: 103px;
  position: absolute;
  top: -50px;
  left: 50%;
  margin-left: -7px;
  background: url(../images/arrow.svg) no-repeat center;
  background-size: 100%;
}

#sobornos h3 {
  font-family: "Hurgey";
  color: #C09900;
  font-size: 5em;
  font-weight: normal;
  position: relative;
}

#sobornos h6 {
  font-size: .75em;
  letter-spacing: 8px;
}

#sobornos h6:after {
  content: "";
  display: block;
  height: 3px;
  width: 50px;
  margin: 2em auto 5em;
  background: #000;
}

#sobornos h6:last-child:after {
  display: none;
}

#sobornos .btn-dale {
  background: #fff;
  border: 2px solid #C09900;
  color: #C09900;
  text-decoration: none;
  font-weight: 700;
  font-size: 1.25em;
  letter-spacing: 7px;
  display: inline-block;
  padding: 1.5em 4em 2em 4em;
  margin-bottom: 1em;
  position: relative;
}

#sobornos .btn-dale:after {
  content: "";
  width: 100%;
  height: 2px;
  background: #C09900;
  position: absolute;
  top: 100%;
  margin-top: -10px;
  left: 0;
  transition: margin 0.15s ease;
}

#sobornos .btn-dale:hover {
  background-color: #fffdf3;
}

#sobornos .btn-dale:hover:after {
  margin-top: -4px;
}

@media (max-width: 768px) {
  #sobornos {
    padding: 2em 0;
  }
  #sobornos h3 {
    font-size: 3em;
  }
  #sobornos h6 {
    letter-spacing: 5px;
  }
  #sobornos h6:after {
    display: none;
  }
  #sobornos .btn-dale {
    font-size: .75em;
    letter-spacing: 5px;
    padding: 1.5em 3em 2em 3em;
  }
  #spiderman {
    display: none;
  }
}

/*# sourceMappingURL=data:application/json;base64, */
